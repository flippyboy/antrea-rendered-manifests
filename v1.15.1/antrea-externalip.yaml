---
# Source: antrea/templates/agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: antrea-agent
  namespace: kube-system
  labels:
    app: antrea
---
# Source: antrea/templates/antctl/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: antctl
  namespace: kube-system
  labels:
    app: antrea
---
# Source: antrea/templates/controller/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: antrea-controller
  namespace: kube-system
  labels:
    app: antrea
---
# Source: antrea/templates/agent/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: antrea-agent-service-account-token
  namespace: kube-system
  annotations:
    kubernetes.io/service-account.name: antrea-agent
type: kubernetes.io/service-account-token
---
# Source: antrea/templates/antctl/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: antctl-service-account-token
  namespace: kube-system
  annotations:
    kubernetes.io/service-account.name: antctl
type: kubernetes.io/service-account-token
---
# Source: antrea/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: antrea-config
  namespace: kube-system
  labels:
    app: antrea
data:
  antrea-agent.conf: |
    featureGates:
      ServiceExternalIP: true
    ovsBridge: "br-int"
    hostGateway: "antrea-gw0"
    trafficEncapMode: "encap"
    noSNAT: false
    tunnelType: "geneve"
    tunnelPort: 0
    tunnelCsum: false
    trafficEncryptionMode: "none"
    enableBridgingMode: false
    disableTXChecksumOffload: false
    defaultMTU: 0
    packetInRate: 500
    wireGuard:
      port: 51820
    egress:
      exceptCIDRs:
      maxEgressIPsPerNode: 255
    serviceCIDR: ""
    serviceCIDRv6: ""
    apiPort: 10350
    enablePrometheusMetrics: true
    flowExporter:
      enable: false
      flowCollectorAddr: "flow-aggregator/flow-aggregator:4739:tls"
      flowPollInterval: "5s"
      activeFlowExportTimeout: "5s"
      idleFlowExportTimeout: "15s"
    nodePortLocal:
      enable: false
      portRange: "61000-62000"
    kubeAPIServerOverride: ""
    dnsServerOverride: ""
    tlsCipherSuites: ""
    tlsMinVersion: ""
    transportInterface: ""
    multicast:
      enable: false
      multicastInterfaces:
      igmpQueryVersions:
      - 1
      - 2
      - 3
      igmpQueryInterval: "125s"
    transportInterfaceCIDRs:
    antreaProxy:
      enable: true
      proxyAll: false
      nodePortAddresses:
      skipServices:
      proxyLoadBalancerIPs: true
      serviceProxyName: ""
      defaultLoadBalancerMode: "nat"
    ipsec:
      authenticationMode: "psk"
    multicluster:
      enableGateway: false
      namespace: ""
      enableStretchedNetworkPolicy: false
      enablePodToPodConnectivity: false
      trafficEncryptionMode: "none"
      wireGuard:
        port: 51821
    auditLogging:
      maxSize: 500
      maxBackups: 3
      maxAge: 28
      compress: true
  antrea-cni.conflist: |
    {
        "cniVersion":"0.3.0",
        "name": "antrea",
        "plugins": [
            {
                "type": "antrea",
                "ipam": {
                    "type": "host-local"
                }
            }
            ,
            {
                "type": "portmap",
                "capabilities": {"portMappings": true}
            }
            ,
            {
                "type": "bandwidth",
                "capabilities": {"bandwidth": true}
            }
        ]
    }
  antrea-controller.conf: |
    featureGates:
      ServiceExternalIP: true
    apiPort: 10349
    enablePrometheusMetrics: true
    selfSignedCert: true
    tlsCipherSuites: ""
    tlsMinVersion: ""
    clientCAFile: ""
    kubeAPIServerOverride: ""
    nodeIPAM:
      enableNodeIPAM: false
      clusterCIDRs:
      serviceCIDR: ""
      serviceCIDRv6: ""
      nodeCIDRMaskSizeIPv4: 24
      nodeCIDRMaskSizeIPv6: 64
    ipsecCSRSigner:
      autoApprove: true
      selfSignedCA: true
    multicluster:
      enableStretchedNetworkPolicy: false
---
# Source: antrea/templates/agent/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: antrea-agent
  labels:
    app: antrea
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - pods/status
    verbs:
      - patch
  - apiGroups:
      - ""
    resources:
      - endpoints
      - services
      - namespaces
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - crd.antrea.io
    resources:
      - antreaagentinfos
    verbs:
      - get
      - update
  - apiGroups:
      - controlplane.antrea.io
    resources:
      - networkpolicies
      - appliedtogroups
      - addressgroups
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - controlplane.antrea.io
    resources:
      - egressgroups
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - controlplane.antrea.io
    resources:
      - nodestatssummaries
    verbs:
      - create
  - apiGroups:
      - controlplane.antrea.io
    resources:
      - networkpolicies/status
    verbs:
      - create
      - get
  - apiGroups:
      - controlplane.antrea.io
    resources:
      - supportbundlecollections
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - controlplane.antrea.io
    resources:
      - supportbundlecollections/status
    verbs:
      - create
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
  - apiGroups:
      - ""
    resourceNames:
      - extension-apiserver-authentication
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - antrea-ca
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - crd.antrea.io
    resources:
      - traceflows
      - traceflows/status
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
  - apiGroups:
      - crd.antrea.io
    resources:
      - egresses
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - crd.antrea.io
    resources:
      - egresses/status
    verbs:
      - update
  - apiGroups:
      - crd.antrea.io
    resources:
      - externalippools
      - ippools
      - trafficcontrols
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - crd.antrea.io
    resources:
      - ippools/status
    verbs:
      - update
  - apiGroups:
      - k8s.cni.cncf.io
    resources:
      - network-attachment-definitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
    - certificates.k8s.io
    resources:
      - certificatesigningrequests
    verbs:
      - get
      - watch
      - list
      - create
  - apiGroups:
    - multicluster.crd.antrea.io
    resources:
    - gateways
    verbs:
    - get
    - list
    - watch
    - patch
  - apiGroups:
    - multicluster.crd.antrea.io
    resources:
    - clusterinfoimports
    - labelidentities
    verbs:
    - get
    - list
    - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
# Source: antrea/templates/antctl/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: antctl
  labels:
    app: antrea
rules:
  - apiGroups:
      - controlplane.antrea.io
    resources:
      - networkpolicies
      - appliedtogroups
      - addressgroups
    verbs:
      - get
      - list
  - apiGroups:
      - stats.antrea.io
    resources:
      - networkpolicystats
      - antreaclusternetworkpolicystats
      - antreanetworkpolicystats
    verbs:
      - get
      - list
  - apiGroups:
      - system.antrea.io
    resources:
      - controllerinfos
    verbs:
      - get
  - apiGroups:
      - system.antrea.io
    resources:
      - supportbundles
    verbs:
      - create
      - get
  - apiGroups:
      - system.antrea.io
    resources:
      - supportbundles/download
    verbs:
      - get
  - nonResourceURLs:
      - /agentinfo
      - /addressgroups
      - /appliedtogroups
      - /loglevel
      - /networkpolicies
      - /ovsflows
      - /ovstracing
      - /podinterfaces
      - /featuregates
      - /serviceexternalip
      - /metrics
      - /debug/pprof
      - /debug/pprof/*
    verbs:
      - get
  - apiGroups:
      - crd.antrea.io
    resources:
      - antreacontrollerinfos
      - antreaagentinfos
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
    verbs:
      - list
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - antrea-config
      - antrea-ca
      - antrea-ipsec-ca
      - antrea-cluster-identity
    verbs:
      - get
---
# Source: antrea/templates/cluster-identity-reader/clusterrolebinding.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: antrea-cluster-identity-reader
  labels:
    app: antrea
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - antrea-cluster-identity
    verbs:
      - get
---
# Source: antrea/templates/controller/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: antrea-controller
  labels:
    app: antrea
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - namespaces
      - configmaps
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - watch
      - list
      - patch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - update
  - apiGroups:
      - ""
    resourceNames:
      - extension-apiserver-authentication
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - antrea-ca
      - antrea-ipsec-ca
      - antrea-cluster-identity
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - secrets
    resourceNames:
      - antrea-controller-tls
      - antrea-ipsec-ca
    verbs:
      - get
      - update
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - create
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    verbs:
      - list
      - update
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    resourceNames:
      - v1beta1.networking.antrea.tanzu.vmware.com
      - v1beta1.controlplane.antrea.tanzu.vmware.com
      - v1alpha1.stats.antrea.tanzu.vmware.com
      - v1beta1.system.antrea.tanzu.vmware.com
      - v1beta2.controlplane.antrea.tanzu.vmware.com
    verbs:
      - delete
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs:
      - list
      - update
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/approval
    - certificatesigningrequests/status
    verbs:
    - update
  - apiGroups:
    - certificates.k8s.io
    resources:
    - signers
    resourceNames:
    - antrea.io/antrea-agent-ipsec-tunnel
    verbs:
    - approve
    - sign
  - apiGroups:
      - crd.antrea.io
    resources:
      - antreacontrollerinfos
    verbs:
      - get
      - create
      - update
      - delete
  - apiGroups:
      - crd.antrea.io
    resources:
      - antreaagentinfos
    verbs:
      - list
      - create
      - delete
  - apiGroups:
      - crd.antrea.io
    resources:
      - clusternetworkpolicies
      - networkpolicies
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
  - apiGroups:
      - crd.antrea.io
    resources:
      - clusternetworkpolicies/status
      - networkpolicies/status
    verbs:
      - update
  - apiGroups:
      - crd.antrea.io
    resources:
      - tiers
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
  - apiGroups:
      - crd.antrea.io
    resources:
      - traceflows
      - traceflows/status
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
  - apiGroups:
      - crd.antrea.io
    resources:
      - externalentities
      - clustergroups
      - groups
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
  - apiGroups:
      - crd.antrea.io
    resources:
      - clustergroups/status
      - groups/status
      - egresses/status
    verbs:
      - update
  - apiGroups:
      - crd.antrea.io
    resources:
      - egresses
    verbs:
      - get
      - watch
      - list
      - update
      - patch
  - apiGroups:
      - crd.antrea.io
    resources:
      - externalippools
      - ippools
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - crd.antrea.io
    resources:
      - externalippools/status
      - ippools/status
    verbs:
      - update
      - patch
  - apiGroups:
      - crd.antrea.io
    resources:
      - externalnodes
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - crd.antrea.io
    resources:
      - supportbundlecollections
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - crd.antrea.io
    resources:
      - supportbundlecollections/status
    verbs:
      - update
  - apiGroups:
      - multicluster.crd.antrea.io
    resources:
      - labelidentities
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.networking.k8s.io
    resources:
      - adminnetworkpolicies
      - baselineadminnetworkpolicies
    verbs:
      - get
      - list
      - watch
---
# Source: antrea/templates/crds-rbac/clusterroles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aggregate-antrea-policies-edit
  labels:
    app: antrea
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
- apiGroups: ["crd.antrea.io"]
  resources: ["clusternetworkpolicies", "networkpolicies"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# Source: antrea/templates/crds-rbac/clusterroles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aggregate-antrea-policies-view
  labels:
    app: antrea
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
- apiGroups: ["crd.antrea.io"]
  resources: ["clusternetworkpolicies", "networkpolicies"]
  verbs: ["get", "list", "watch"]
---
# Source: antrea/templates/crds-rbac/clusterroles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aggregate-traceflows-edit
  labels:
    app: antrea
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
- apiGroups: ["crd.antrea.io"]
  resources: ["traceflows"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# Source: antrea/templates/crds-rbac/clusterroles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aggregate-traceflows-view
  labels:
    app: antrea
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
- apiGroups: ["crd.antrea.io"]
  resources: ["traceflows"]
  verbs: ["get", "list", "watch"]
---
# Source: antrea/templates/crds-rbac/clusterroles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aggregate-antrea-clustergroups-edit
  labels:
    app: antrea
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
- apiGroups: ["crd.antrea.io"]
  resources: ["clustergroups"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# Source: antrea/templates/crds-rbac/clusterroles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aggregate-antrea-clustergroups-view
  labels:
    app: antrea
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
- apiGroups: ["crd.antrea.io"]
  resources: ["clustergroups"]
  verbs: ["get", "list", "watch"]
---
# Source: antrea/templates/agent/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: antrea-agent
  labels:
    app: antrea
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: antrea-agent
subjects:
  - kind: ServiceAccount
    name: antrea-agent
    namespace: kube-system
---
# Source: antrea/templates/antctl/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: antrea
  name: antctl
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: antctl
subjects:
  - kind: ServiceAccount
    name: antctl
    namespace: kube-system
---
# Source: antrea/templates/controller/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: antrea-controller
  labels:
    app: antrea
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: antrea-controller
subjects:
  - kind: ServiceAccount
    name: antrea-controller
    namespace: kube-system
---
# Source: antrea/templates/controller/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: antrea
  namespace: kube-system
  labels:
    app: antrea
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: api
  selector:
    app: antrea
    component: antrea-controller
---
# Source: antrea/templates/agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: antrea-agent
  namespace: kube-system
  labels:
    app: antrea
    component: antrea-agent
spec:
  selector:
    matchLabels:
      app: antrea
      component: antrea-agent
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: antrea-agent
        checksum/config: b6dd696bddcb084575ac0164f36cb3b6138c83b920cf310a0e41347e006e488b
      labels:
        app: antrea
        component: antrea-agent
    spec:
      hostNetwork: true
      priorityClassName: system-node-critical
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
      serviceAccountName: antrea-agent
      initContainers:
        - name: install-cni
          image: "antrea/antrea-agent-ubuntu:v1.15.1"
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
          command: ["install_cni"]
          securityContext:
          env:
            - name: SKIP_CNI_BINARIES
              value: ""
            - name: SKIP_LOADING_KERNEL_MODULES
              value: "1"
          volumeMounts:
          - name: antrea-config
            mountPath: /etc/antrea/antrea-cni.conflist
            subPath: antrea-cni.conflist
            readOnly: true
          - name: host-cni-conf
            mountPath: /host/etc/cni/net.d
          - name: host-cni-bin
            mountPath: /host/opt/cni/bin
          - name: host-var-run-antrea
            mountPath: /var/run/antrea
      containers:
        - name: antrea-agent
          image: "antrea/antrea-agent-ubuntu:v1.15.1"
          imagePullPolicy: IfNotPresent
          command: ["antrea-agent"]
          args:
            - "--config=/etc/antrea/antrea-agent.conf"
            - "--logtostderr=false"
            - "--log_dir=/var/log/antrea"
            - "--alsologtostderr"
            - "--log_file_max_size=100"
            - "--log_file_max_num=4"
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          resources:
            requests:
              cpu: 200m
          ports:
            - containerPort: 10350
              name: api
              protocol: TCP
          livenessProbe:
            httpGet:
              host: localhost
              path: /livez
              port: api
              scheme: HTTPS
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              host: localhost
              path: /readyz
              port: api
              scheme: HTTPS
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 8
          securityContext:
            privileged: true
          volumeMounts:
          - name: antrea-config
            mountPath: /etc/antrea/antrea-agent.conf
            subPath: antrea-agent.conf
            readOnly: true
          - name: host-var-run-antrea
            mountPath: /var/run/antrea
          - name: host-var-run-antrea
            mountPath: /var/run/openvswitch
            subPath: openvswitch
          - name: host-var-run-antrea
            mountPath: /var/lib/cni
            subPath: cni
          - name: host-var-log-antrea
            mountPath: /var/log/antrea
          - name: host-proc
            mountPath: /host/proc
            readOnly: true
          - name: host-var-run-netns
            mountPath: /host/var/run/netns
            readOnly: true
            mountPropagation: HostToContainer
          - name: xtables-lock
            mountPath: /run/xtables.lock
        - name: antrea-ovs
          image: "antrea/antrea-agent-ubuntu:v1.15.1"
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 200m
          command: ["start_ovs"]
          args:
            - "--log_file_max_size=100"
            - "--log_file_max_num=4"
          securityContext:
            capabilities:
              add:
                - SYS_NICE
                - NET_ADMIN
                - SYS_ADMIN
                - IPC_LOCK
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - timeout 10 container_liveness_probe ovs
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 10
            failureThreshold: 5
          volumeMounts:
          - name: host-var-run-antrea
            mountPath: /var/run/openvswitch
            subPath: openvswitch
          - name: host-var-log-antrea
            mountPath: /var/log/openvswitch
            subPath: openvswitch
      volumes:
        - name: antrea-config
          configMap:
            name: antrea-config
        - name: host-cni-conf
          hostPath:
            path: /etc/cni/net.d
        - name: host-cni-bin
          hostPath:
            path: /opt/cni/bin
        - name: host-proc
          hostPath:
            path: /proc
        - name: host-var-run-netns
          hostPath:
            path: /var/run/netns
        - name: host-var-run-antrea
          hostPath:
            path: /var/run/antrea
            type: DirectoryOrCreate
        - name: host-var-log-antrea
          hostPath:
            path: /var/log/antrea
            type: DirectoryOrCreate
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
---
# Source: antrea/templates/controller/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: antrea-controller
  namespace: kube-system
  labels:
    app: antrea
    component: antrea-controller
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: antrea
      component: antrea-controller
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/config: b6dd696bddcb084575ac0164f36cb3b6138c83b920cf310a0e41347e006e488b
      labels:
        app: antrea
        component: antrea-controller
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      hostNetwork: true
      priorityClassName: system-cluster-critical
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 0
      serviceAccountName: antrea-controller
      containers:
        - name: antrea-controller
          image: "antrea/antrea-controller-ubuntu:v1.15.1"
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 200m
          command: ["antrea-controller"]
          args:
            - "--config=/etc/antrea/antrea-controller.conf"
            - "--logtostderr=false"
            - "--log_dir=/var/log/antrea"
            - "--alsologtostderr"
            - "--log_file_max_size=100"
            - "--log_file_max_num=4"
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: SERVICEACCOUNT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: ANTREA_CONFIG_MAP_NAME
              value: antrea-config
          ports:
            - containerPort: 10349
              name: api
              protocol: TCP
          readinessProbe:
            httpGet:
              host: localhost
              path: /readyz
              port: api
              scheme: HTTPS
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 5
          livenessProbe:
            httpGet:
              host: localhost
              path: /livez
              port: api
              scheme: HTTPS
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 5
          volumeMounts:
            - name: antrea-config
              mountPath: /etc/antrea/antrea-controller.conf
              subPath: antrea-controller.conf
              readOnly: true
            - name: antrea-controller-tls
              mountPath: /var/run/antrea/antrea-controller-tls
            - name: host-var-log-antrea
              mountPath: /var/log/antrea
      volumes:
        - name: antrea-config
          configMap:
            name: antrea-config
        - name: antrea-controller-tls
          secret:
            secretName: antrea-controller-tls
            defaultMode: 0400
            optional: true
        - name: host-var-log-antrea
          hostPath:
            path: /var/log/antrea
            type: DirectoryOrCreate
---
# Source: antrea/templates/controller/apiservices.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta2.controlplane.antrea.io
  labels:
    app: antrea
    served-by: antrea-controller
spec:
  group: controlplane.antrea.io
  groupPriorityMinimum: 100
  version: v1beta2
  versionPriority: 100
  service:
    name: antrea
    namespace: kube-system
---
# Source: antrea/templates/controller/apiservices.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.system.antrea.io
  labels:
    app: antrea
    served-by: antrea-controller
spec:
  group: system.antrea.io
  groupPriorityMinimum: 100
  version: v1beta1
  versionPriority: 100
  service:
    name: antrea
    namespace: kube-system
---
# Source: antrea/templates/controller/apiservices.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.stats.antrea.io
  labels:
    app: antrea
    served-by: antrea-controller
spec:
  group: stats.antrea.io
  groupPriorityMinimum: 100
  version: v1alpha1
  versionPriority: 100
  service:
    name: antrea
    namespace: kube-system
---
# Source: antrea/templates/webhooks/mutating/crdmutator.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: "crdmutator.antrea.io"
  labels:
    app: antrea
    served-by: antrea-controller
webhooks:
  - name: "acnpmutator.antrea.io"
    clientConfig:
      service:
        name: "antrea"
        namespace: kube-system
        path: "/mutate/acnp"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["crd.antrea.io"]
        apiVersions: ["v1alpha1"]
        resources: ["clusternetworkpolicies"]
        scope: "Cluster"
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
  - name: "annpmutator.antrea.io"
    clientConfig:
      service:
        name: "antrea"
        namespace: kube-system
        path: "/mutate/annp"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["crd.antrea.io"]
        apiVersions: ["v1alpha1"]
        resources: ["networkpolicies"]
        scope: "Namespaced"
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
---
# Source: antrea/templates/webhooks/validating/crdvalidator.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: "crdvalidator.antrea.io"
  labels:
    app: antrea
    served-by: antrea-controller
webhooks:
  - name: "tiervalidator.antrea.io"
    clientConfig:
      service:
        name: "antrea"
        namespace: kube-system
        path: "/validate/tier"
    rules:
      - operations: ["CREATE", "UPDATE", "DELETE"]
        apiGroups: ["crd.antrea.io"]
        apiVersions: ["v1alpha1", "v1beta1"]
        resources: ["tiers"]
        scope: "Cluster"
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
  - name: "acnpvalidator.antrea.io"
    clientConfig:
      service:
        name: "antrea"
        namespace: kube-system
        path: "/validate/acnp"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["crd.antrea.io"]
        apiVersions: ["v1beta1"]
        resources: ["clusternetworkpolicies"]
        scope: "Cluster"
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
  - name: "annpvalidator.antrea.io"
    clientConfig:
      service:
        name: "antrea"
        namespace: kube-system
        path: "/validate/annp"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["crd.antrea.io"]
        apiVersions: ["v1beta1"]
        resources: ["networkpolicies"]
        scope: "Namespaced"
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
  - name: "anpvalidator.antrea.io"
    clientConfig:
      service:
        name: "antrea"
        namespace: kube-system
        path: "/validate/anp"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["policy.networking.k8s.io"]
        apiVersions: ["v1alpha1"]
        resources: ["adminnetworkpolicies"]
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
  - name: "banpvalidator.antrea.io"
    clientConfig:
      service:
        name: "antrea"
        namespace: kube-system
        path: "/validate/banp"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["policy.networking.k8s.io"]
        apiVersions: ["v1alpha1"]
        resources: ["baselineadminnetworkpolicies"]
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
  - name: "clustergroupvalidator.antrea.io"
    clientConfig:
      service:
        name: "antrea"
        namespace: kube-system
        path: "/validate/clustergroup"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["crd.antrea.io"]
        apiVersions: ["v1beta1"]
        resources: ["clustergroups"]
        scope: "Cluster"
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
  - name: "groupvalidator.antrea.io"
    clientConfig:
      service:
        name: "antrea"
        namespace: "kube-system"
        path: "/validate/group"
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: [ "crd.antrea.io" ]
        apiVersions: [ "v1beta1" ]
        resources: [ "groups" ]
        scope: "Namespaced"
    admissionReviewVersions: [ "v1", "v1beta1" ]
    sideEffects: None
    timeoutSeconds: 5
  - name: "externalippoolvalidator.antrea.io"
    clientConfig:
      service:
        name: "antrea"
        namespace: kube-system
        path: "/validate/externalippool"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["crd.antrea.io"]
        apiVersions: ["v1alpha2", "v1beta1"]
        resources: ["externalippools"]
        scope: "Cluster"
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
  - name: "egressvalidator.antrea.io"
    clientConfig:
      service:
        name: "antrea"
        namespace: kube-system
        path: "/validate/egress"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["crd.antrea.io"]
        apiVersions: ["v1alpha2"]
        resources: ["egresses"]
        scope: "Cluster"
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
  - name: "ippoolvalidator.antrea.io"
    clientConfig:
      service:
        name: "antrea"
        namespace: kube-system
        path: "/validate/ippool"
    rules:
      - operations: ["CREATE", "UPDATE", "DELETE"]
        apiGroups: ["crd.antrea.io"]
        apiVersions: ["v1alpha2"]
        resources: ["ippools"]
        scope: "Cluster"
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
  - name: "supportbundlecollectionvalidator.antrea.io"
    clientConfig:
      service:
        name: "antrea"
        namespace: kube-system
        path: "/validate/supportbundlecollection"
    rules:
      - operations: ["UPDATE", "DELETE"]
        apiGroups: ["crd.antrea.io"]
        apiVersions: ["v1alpha1"]
        resources: ["supportbundlecollections"]
        scope: "Cluster"
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
  - name: "traceflowvalidator.antrea.io"
    clientConfig:
      service:
        name: "antrea"
        namespace: kube-system
        path: "/validate/traceflow"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["crd.antrea.io"]
        apiVersions: ["v1alpha1"]
        resources: ["traceflows"]
        scope: "Cluster"
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
